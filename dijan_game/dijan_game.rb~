#!/usr/bin/env ruby
###################################################
###
## 	File: dijan_game.rb
## 	Desc: Diane an Janet's board game
#

NUMBER_OF_PLAYERS 	= 4
MULTIPLER 			= 1

BOARD = [
	"000000000000000",
	"080000000000070",
	"000000000000000",
	"000000000006000",
	"000000000000000",
	"000000000000000",
	"000000000000000",
	"050000000000040",
	"000000000000000",
	"000000000000000",
	"000000000000000",
	"000000000000000",
	"000000000000000",
	"000000000000090",
	"000000000000000"
]

CELL_TYPES = [
	"Park", 		# 0
	"Street", 		# 1
	"Pink", 		# 2
	"Yellow", 		# 3
	"Lottery", 		# 4
	"Goldenville", 	# 5
	"Plumeville", 	# 6
	"Poor House", 	# 7
	"Jail", 		# 8
	"Start" 		# 9
]

$board = BOARD

BLUES = [
  "A blue card"
]

YELLOWS = [
  "A yellow card"
]

PINKS = [
  "A pink card"
]

$blues 		= BLUES
$yellows 	= YELLOWS
$pinks 		= PINKS


class Player

	attr_accessor :name
	attr_accessor :bank, :cash, :paycheck
	attr_accessor :house, :car, :family
	attr_accessor :house_insurance, :car_insurance, :health_insurance
	attr_accessor :college, :church


	def initialize(player_name)
		name 	= player_name
		bamk 	= 100 * MULTIPLER
		cash 	= 10 * MULTIPLER
		paycheck= 1 * MULTIPLER
		house_insurance = false
		car_insurance 	= false
		health_insurance = false
		college = false
		family = 1
		church = false
	end

	def deposit(amt)
		bank += amt
		cash -= amt
	end

	def withdraw(amt)
		bank -= amt
		cash += amt
	end

	def payday(amt=paycheck)
		amt = amt
		amt += amt / 10 if college?
		amt -= amt / 10 if church?
		cash += amt
	end

	def bonus(amt)
		payday(paycheck+amt)
	end

	def expense(amt)
		cash -= amt
	end

	def win(amt)
		cash += amt
	end

	def cash=(amt)
		@cash = amt
		bank -= amt if @cash <= 0
	end

	def bank=(amt)
		@bank = amt
		raise "You are in the poor house" if @bank <= 0
	end

end # class Player

players = [
	Player.new('Diane'),
	Player.new('Janet'),
	Player.new('Mommy'),
	Player.new('Daddy')
]


while true do
	players.each do |player|
		amount = rand(10*MULTIPLER)
		rand(2) ? player.expense(amount) : player.win(amount)
	emd
end